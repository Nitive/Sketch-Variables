// Variables Plugin (cmd l)
/*
  Original code from https://github.com/nitive/...
*/
#import 'utilities.js'
#import 'layer.js'
#import 'text.js'

lg("--------------------------------");

var variablesLayerName = "variables";
var separator = " // ";
var classNameRegex = /^[\.#]?[\w-]+ *\{? *$/;
var valueRegex = /^(\t| {1,4})[\w-]*(\[\d+\])?[=: ]+[ \w#\.]+;? *$/;

String.prototype.capitalize = function() {
  return this[0].toUpperCase() + this.substring(1);
}

function lg(msg, title) {
  title = (title || "");
  if (title != "") title += ": ";
  NSLog("%@%@", title, msg);
}
function variablesLayer() {
  var layers = [[doc currentPage] children];
  for (i = 0; i < [layers count]; i++) {
    var layer = [layers objectAtIndex:i];
    if ([layer name].substring(0, variablesLayerName.length) == variablesLayerName)
      return layer;
  }
  return "Not found"
}

function parseVariables() {
  layer = variablesLayer();
  if (layer == "Not found") return;

  var styles = {};
  var variable = "";

  lines = [layer stringValue].split("\n");
  for (i = 0; i < lines.length; i++) {
    line = lines[i];
    if (line.match(classNameRegex)) {
      variable = line.match(/[\.#\w-]+/);
    }
    else if (line.match(valueRegex)) {
      var name = line.match(/[\w-]+/)[0];
      var value = line.replace(name, "").match(/[\w#]+[\w# ]*/)[0].trim();
      styles[variable] = styles[variable] || {};
      styles[variable][name] = value;
    }
  }
  return styles;
}

function applyStyles(layer, className, styles) {
  if (styles[className] != undefined) {
    for (var key in styles[className]) {
      if ([layer class] == MSTextLayer)
        applyTextStyles(key, styles[className][key]);
      else
        applyLayerStyles(key, styles[className][key]);
    }
  }
}

var styles = parseVariables();

var layers = [[doc currentPage] children];

for (i = 0; i < [layers count]; i++) {
  var layer = [layers objectAtIndex:i];
  var index = [layer name].indexOf(separator);
  if (index != -1) {
    // Delete all before separator, separator and spaces
    var re = new RegExp("^.*" + separator + " *","g");
    var classes = [layer name].replace(re, "").split(/\s+/);
    for (j = 0; j < classes.length; j++) {
      applyStyles(layer, classes[j], styles);
    }
  }
}

lg("--------------------------------");
